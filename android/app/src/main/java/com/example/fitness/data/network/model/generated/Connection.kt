/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.example.fitness.data.network.model.generated

import com.example.fitness.data.network.model.generated.UserIdNameEmail

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id Connection ID
 * @param coachId Coach user ID
 * @param traineeId Trainee user ID
 * @param status Connection status
 * @param createdAt Creation date
 * @param updatedAt Last update date
 * @param coach 
 * @param trainee 
 * @param startDate Connection start date
 * @param endDate Connection end date
 * @param notes Connection notes
 */


data class Connection (

    /* Connection ID */
    @Json(name = "id")
    val id: kotlin.Int,

    /* Coach user ID */
    @Json(name = "coachId")
    val coachId: kotlin.String,

    /* Trainee user ID */
    @Json(name = "traineeId")
    val traineeId: kotlin.String,

    /* Connection status */
    @Json(name = "status")
    val status: Connection.Status,

    /* Creation date */
    @Json(name = "createdAt")
    val createdAt: kotlin.String,

    /* Last update date */
    @Json(name = "updatedAt")
    val updatedAt: kotlin.String,

    @Json(name = "coach")
    val coach: UserIdNameEmail,

    @Json(name = "trainee")
    val trainee: UserIdNameEmail,

    /* Connection start date */
    @Json(name = "startDate")
    val startDate: kotlin.String? = null,

    /* Connection end date */
    @Json(name = "endDate")
    val endDate: kotlin.String? = null,

    /* Connection notes */
    @Json(name = "notes")
    val notes: kotlin.String? = null

) {

    /**
     * Connection status
     *
     * Values: pending,active,inactive,blocked
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "pending") pending("pending"),
        @Json(name = "active") active("active"),
        @Json(name = "inactive") inactive("inactive"),
        @Json(name = "blocked") blocked("blocked");
    }

}

